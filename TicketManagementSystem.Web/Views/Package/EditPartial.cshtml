@model PackageEditDefaultModel

<h2>Редагувати пачку ID: @Model.Id</h2>


@using (Ajax.BeginForm("Edit", new AjaxOptions
{
    UpdateTargetId = "package-result",
    OnBegin = "OnBegin",
    OnComplete = "OnComplete"
}))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    @if (Model.IsEmpty)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.ColorId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ColorId, Model.Colors, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ColorId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SerialId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SerialId, Model.Series, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SerialId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NominalId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="NominalId" name="NominalId" class="form-control">
                    @foreach (var item in Model.Nominals)
                    {
                        <option value="@item.Id" selected="@(item.Id == Model.NominalId)">@item.Amount грн.</option>
                    }
                </select>

                @Html.ValidationMessageFor(model => model.NominalId, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    else
    {
        @Html.AlertWarning("Не можна змінити колір або серію пачки, якщо в ній вже є квитки.")

        @Html.HiddenFor(model => model.ColorId)
        @Html.HiddenFor(model => model.SerialId)
        @Html.HiddenFor(model => model.NominalId)
    }

    <div class="form-group">
        @Html.LabelFor(model => model.FirstNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Зберегти" class="btn btn-primary btn-loading" data-loading-text="Збереження..." />
        </div>
    </div>
</div>
}
