@model TicketCreateInPackageModel

@{
    ViewBag.Title = $"Додати квиток до пачки \"{Model.PackageName}\"";
}

<h2>@ViewBag.Title</h2>
<hr />

<dl class="dl-horizontal">
    <dt>Пачка:</dt>
    <dd>@Html.ActionLink(Model.PackageName, "Details", "Package", new { id = Model.PackageId }, new { })</dd>
</dl>

@using (Ajax.BeginForm("Create", new AjaxOptions
{
    UpdateTargetId = "create-result",
    OnBegin = "OnBegin",
    OnSuccess = "OnSuccess"
}))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.PackageId)

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model.CanSelectColor)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.ColorId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.ColorId, Model.Colors, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ColorId, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            @Html.HiddenFor(model => model.ColorId)
        }

        @if (Model.CanSelectSerial)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.SerialId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.SerialId, Model.Series, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SerialId, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            @Html.HiddenFor(model => model.SerialId)
        }

        <div class="form-group">
            @Html.LabelFor(model => model.SerialNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SerialNumber, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                @Html.ValidationMessageFor(model => model.SerialNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                <a class="btn btn-link btn-sm" onclick="putCurrentDate('Date')">Сьогодні</a>
                <br />
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Створити" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div id="create-result"></div>

@section scripts {
    @Scripts.Render("~/Scripts/ticket-create.js")
}
